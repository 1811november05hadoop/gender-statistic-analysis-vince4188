package com.revature.map;

import java.io.IOException;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

public class WorldWomenMapper extends Mapper<LongWritable, Text, Text, IntWritable> {
	
	@Override
	public void map(LongWritable key, Text value, Context context)
			throws IOException, InterruptedException {
		
		String line = value.toString();
		line = line.substring(1);
		line = line.substring(0, line.length()-2);
		
		if(line.contains("completed upper secondary") && line.contains("female") && !line.contains("cumulative")){
			//System.out.println(line);
			String[] splits = line.split("\",\"");
			String country = splits[0];
			int percent = 0;
			int year = 2016;
			if(splits.length > 4){
				for (int i = splits.length-1; i > splits.length - 4; i--){
					if (!splits[i].equals("")){
						percent = Integer.parseInt(splits[i]);
						break;
					}
					year--;
				}
				
			}
			context.write(new Text(country + "(" + year + "): " + Integer.toString(percent) + "%"), new IntWritable(1));
			/*for (int i = splits.length-1; i > splits.length - 4; i--){
				if (!splits[i].equals("")){
					percent = Integer.parseInt(splits[i]);
					break;
				}
				year--;
			}*/
			String result = "";
			int counter = 0;
			for (String word: splits){
				result += "[" + counter++ + "] " + word + ", ";
			}
			
			result += "length " + splits.length;
			//context.write(new Text(result), new IntWritable(1));
			//context.write(new Text(country + "(" + year + "): " + Integer.toString(percent) + "%"), new IntWritable(1));
		}
	}

}
