package com.revature.reduce;

import java.io.IOException;

import org.apache.hadoop.io.DoubleWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;

public class EmploymentMaleFemaleReducer extends Reducer<Text, DoubleWritable, Text, Text>{

	@Override
	public void reduce(Text key, Iterable<DoubleWritable> values, Context context)
			throws IOException, InterruptedException {
		
		double total = 0.0;
		double counter = 0.0;
		
		for(DoubleWritable value: values){
			//only a -1 can be received if there is no data 
			if (value.get() == -1){
				if(key.toString().contains("youth female") || key.toString().contains("youth male")){
					context.write(key, new Text("No valid data between 2000-2016"+ //used to format the output to be more presentable
					"\n==========================================================="));
				}
				else{
					context.write(key, new Text("No valid data between 2000-2016"));
				}
				break;
			}
			total += value.get();
			counter++;
		}
		if(key.toString().contains("youth female") || key.toString().contains("youth male") && counter != 0.0){
			context.write(key, new Text(total/counter + "%" +
			"\n==========================================================="));
		}
		else if(counter != 0.0){
			context.write(key, new Text(total/counter + "%"));
		}
	}
}
